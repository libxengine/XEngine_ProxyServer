name: release packet

on:
  push:
    branches: 
      - develop
  
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Download linuxbuild
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: linuxbuild.yml
          workflow_conclusion: success
          check_artifacts: false
          skip_unpack: true
          if_no_artifact_found: fail
          path: ./
      - name: Download macbuild
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: macbuild.yml
          workflow_conclusion: success
          check_artifacts: false
          skip_unpack: true
          if_no_artifact_found: fail
          path: ./
      - name: Download msbuild
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: msbuild.yml
          workflow_conclusion: success
          check_artifacts: false
          skip_unpack: true
          if_no_artifact_found: fail
          path: ./

      - name: Display structure of downloaded files
        run: ls -al ./

        # 检出代码并包含标签
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      # 获取最新的标签并提取 X 部分
      - name: Get current version and increment X
        id: versioning
        run: |
          # 获取最新的标签，假设标签形式为 V1.X.0.1001
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          # 提取 X 的值并递增
          base=$(echo $latest_tag | cut -d '.' -f 1-2)
          patch=$(echo $latest_tag | cut -d '.' -f 3)
          build=$(echo $latest_tag | cut -d '.' -f 4)
          new_version="$base.$((patch + 1)).$build"
          echo "New version: $new_version"
          echo "::set-output name=new_tag::$new_version"

      # 创建并推送新的 Git 标签
      - name: Create and push new tag
        run: |
          git tag ${{ steps.versioning.outputs.new_tag }}
          git push origin ${{ steps.versioning.outputs.new_tag }}
        
      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          tag_name: ${{ steps.versioning.outputs.new_tag }}
          files: |
            XEngine_ProxyServiceApp-x64-Mac.zip
            XEngine_ProxyServiceApp-x64-Ubuntu.zip
            XEngine_ProxyServiceApp-x64-Windows.zip
            XEngine_ProxyServiceApp-x86-Windows.zip